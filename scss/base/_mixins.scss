// =======================
// Tools/Mixins
// Thanks to @sutterlity
// https://github.com/sutter/POPY-Starter-integration-web/blob/master/scss/tools/_mixins.scss
// =======================

// -----------------------
// == Base
// -----------------------

// = Inline-block
// -----------------------------
@mixin inline-block ($haslayout : true){
	display: inline-block;
	vertical-align: middle;
	@if $haslayout == true {
		.lt-ie8 & {
			display: inline;
			zoom: 1;
		}
	}
}

// = Clearfix
// -----------------------------
@mixin clearfix ($haslayout : true) {
	@if $haslayout == true {
		.lt-ie8 & {
			zoom: 1;
		}
	}
	&:before, &:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both
	}
}

// = Opacity
// -----------------------------
@mixin opacity($opacity) {
    filter: unquote("progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})");
    opacity: $opacity;

    /* Hack IE6 */
    .lt-ie7 & {
        filter : alpha(opacity=#{round($opacity * 100)});
        zoom: 1;
    }
}

// = Placeholder
// -----------------------------
@mixin placeholder($color : $clr-mixin-placeholder) {
	&::-webkit-input-placeholder {
		color: $color;
        @content;
	}
	&:-moz-placeholder {
		color: $color;
        @content;
	}
	&:-ms-input-placeholder {
		color: $color;
        @content;
	}
}

// = Selection
// -----------------------------
$prefixes: ("-webkit-","-moz-", "");
@mixin selection($color, $background) {
	@each $prefix in $prefixes {
		::#{$prefix}selection {
			color: $color;
			background: $background;
			text-shadow:none;
		}
	}
}

// = Position
// -----------------------------
@mixin position ($position: relative, $coordinates: 0 0 0 0) {
	@if type-of($position) == list {
		$coordinates: $position;
		$position: relative;
	}
	$top: nth($coordinates, 1);
	$right: nth($coordinates, 2);
	$bottom: nth($coordinates, 3);
	$left: nth($coordinates, 4);
	position: $position;
	@if $top == auto {
		top: $top;
	}
	@else if not(unitless($top)) {
		top: $top;
	}
	@if $right == auto {
		right: $right;
	}
	@else if not(unitless($right)) {
		right: $right;
	}
	@if $bottom == auto {
		bottom: $bottom;
	}
	@else if not(unitless($bottom)) {
		bottom: $bottom;
	}
	@if $left == auto {
		left: $left;
	}
	@else if not(unitless($left)) {
		left: $left;
	}
}

// ----------------------------------------------------------
// == CSS3
// ----------------------------------------------------------

// = Prefixer
// -----------------------------
$prefix-for-webkit:    true !default;
$prefix-for-mozilla:   true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera:     true !default;
$prefix-for-spec:      true !default;

@mixin prefixer ($property, $value, $prefixes) {
	@each $prefix in $prefixes {

		@if $prefix == webkit and $prefix-for-webkit == true {
			-webkit-#{$property}: $value;
		}
		@else if $prefix == moz and $prefix-for-mozilla == true {
			-moz-#{$property}: $value;
		}
		@else if $prefix == ms and $prefix-for-microsoft == true {
			-ms-#{$property}: $value;
		}
		@else if $prefix == o and $prefix-for-opera == true {
			-o-#{$property}: $value;
		}
		@else if $prefix == spec and $prefix-for-spec == true {
			#{$property}: $value;
		}
		@else {
			@warn "Unrecognized prefix: #{$prefix}";
		}
	}
}

@mixin disable-prefix-for-all() {
	$prefix-for-webkit:    false;
	$prefix-for-mozilla:   false;
	$prefix-for-microsoft: false;
	$prefix-for-opera:     false;
	$prefix-for-spec:      false;
}

// = Border-radius
// -----------------------------
@mixin border-radius($radius : 5px) {
	@include prefixer(border-radius, $radius, moz spec)
}

@mixin border-top-radius($radius : 5px) {
	@include prefixer(border-top-left-radius, $radius, moz spec);
	@include prefixer(border-top-right-radius, $radius, moz spec);
}

@mixin border-bottom-radius($radius : 5px) {
	@include prefixer(border-bottom-left-radius, $radius, moz spec);
	@include prefixer(border-bottom-right-radius, $radius, moz spec);
}

@mixin border-left-radius($radius : 5px) {
	@include prefixer(border-top-left-radius, $radius, moz spec);
	@include prefixer(border-bottom-left-radius, $radius, moz spec);
}

@mixin border-right-radius($radius : 5px) {
	@include prefixer(border-top-right-radius, $radius, moz spec);
	@include prefixer(border-bottom-right-radius, $radius, moz spec);
}

// = Transition
// -----------------------------
@mixin transition ($transition : all .3s ease-in-out) {
	@include prefixer(transition, $transition, webkit moz ms o spec);
}

// = Box-sizing
// -----------------------------
@mixin box-sizing ($box : border-box) {
	//  content-box | border-box | inherit
	@include prefixer(box-sizing, $box, webkit moz spec);
}

// = Filter
// -----------------------------
@mixin filter (
	$filter-1,
	$filter-2 : false,
	$filter-3 : false,
	$filter-4 : false,
	$filter-5 : false,
	$filter-6 : false,
	$filter-7 : false,
	$filter-8 : false,
	$filter-9 : false,
	$filter-10: false
	) {
	$filter : compact($filter-1, $filter-2, $filter-3, $filter-4, $filter-5, $filter-6, $filter-7, $filter-8, $filter-9, $filter-10);
	@include prefixer(filter, $filter, webkit moz spec);
}

// = UL
// -----------------------------
@mixin ul-list-inline() {
    list-style: none;
    margin: 0;
    padding: 0;

    li {
        @include inline-block();
    }
}

@mixin reset-ul() {
    list-style: none;
    margin: 0;
    padding: 0;
}

@mixin ul-justify{
  &:after{width: 100%; display: inline-block; content: "."; visibility: hidden;}
  text-align: justify;
  li{display: inline-block;}
}

// = Transform
// -----------------------------
@mixin transform($property: none) {
    @include prefixer(transform, $property, webkit moz ms o spec);
}

@mixin transform-origin($axes: 50%) {
    @include prefixer(transform-origin, $axes, webkit moz ms o spec);
}

@mixin transform-style ($style: flat) {
    @include prefixer(transform-style, $style, webkit moz ms o spec);
}

// = Keyframes
// -----------------------------
@mixin keyframes($name) {
    $original-prefix-for-webkit:    $prefix-for-webkit;
    $original-prefix-for-mozilla:   $prefix-for-mozilla;
    $original-prefix-for-microsoft: $prefix-for-microsoft;
    $original-prefix-for-opera:     $prefix-for-opera;
    $original-prefix-for-spec:      $prefix-for-spec;

    @if $original-prefix-for-webkit {
        @include disable-prefix-for-all();
        $prefix-for-webkit: true;
        @-webkit-keyframes #{$name} {
            @content;
        }
    }
    @if $original-prefix-for-mozilla {
        @include disable-prefix-for-all();
        $prefix-for-mozilla: true;
        @-moz-keyframes #{$name} {
            @content;
        }
    }
    @if $original-prefix-for-spec {
        @include disable-prefix-for-all();
        $prefix-for-spec: true;
        @keyframes #{$name} {
            @content;
        }
    }

    $prefix-for-webkit:    $original-prefix-for-webkit   ;
    $prefix-for-mozilla:   $original-prefix-for-mozilla  ;
    $prefix-for-microsoft: $original-prefix-for-microsoft;
    $prefix-for-opera:     $original-prefix-for-opera    ;
    $prefix-for-spec:      $original-prefix-for-spec     ;
}

// = Calc
// -----------------------------
@mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -o-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}



@mixin box($width,$height:0,$dsp:''){
  width:$width;
  @if $height==0 {
    height: $width;
  }@else{
    height:$height
  }
  @if($dsp!=''){
    display: unquote($dsp);
  }
}
@mixin circle($radius,$display:block){
  @include box($radius*2);
  @include border-radius(50%);
  display:$display;
}

@mixin circle-half($radius,$display:block){
  @include border-bottom-left-radius($radius);
  @include border-bottom-right-radius($radius);
  @include box($radius*2,$radius+10);

  display:$display;
}

@mixin form-placeholer(){
  &::-webkit-input-placeholder { /* WebKit browsers */
    @content;
  }
  &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    @content;
  }
  &::-moz-placeholder { /* Mozilla Firefox 19+ */
    @content;
  }
  &:-ms-input-placeholder { /* Internet Explorer 10+ */
    @content;
  }
}

@mixin dborder($color1,$color2){
  border: 1px solid $color1;
  outline: 1px solid $color2;
}


@mixin bg($number:3,$width:50,$orientation:'vertical'){
  @for $i from 0 through $number{
    &:nth-child(#{$i+1})>a{
      background-position: 0 -#{$i*$width}px;
    }
  }
}

@mixin cborders($border){
  border-bottom:$border;
  &:first-child{
    border-top:$border;
  }
}

@mixin text($s:'',$w:'',$t:'',$d:'',$sl:'',$a:'',$ls:''){
  @if $s!=''{
    font-size:unquote($s);
  }
  @if $sl!=''{
    font-style:unquote($sl);
  }
  @if $w!=''{
    font-weight:unquote($w);
  }
  @if $t!=''{
    text-transform:unquote($t);
  }
  @if $d!=''{
    text-decoration:unquote($d);
  }
  @if $a!=''{
    text-align:unquote($a);
  }
  @if $ls!=''{
    letter-spacing:unquote($ls);
  }
}

@mixin input-height-padding($fSize,$height){
  line-height: 1;
  padding-top:($height - $fSize)/2 !important;
  padding-bottom:($height - $fSize)/2 !important;
}

@mixin margin-center{
  margin-left: auto !important;
  margin-right: auto !important;
}

@mixin list-indent($margin){
  &>li+li{
    margin-left: $margin;
  }
}

@mixin list-indent-isolate($count,$step){
  @include clearfix;
  &>li{
    float: left;
    margin-right: -100%;
  }
  @for $i from 1 through $count{
    &>li:nth-child(#{$i}){
      margin-left: percentage(($i - 1)*($step/100));
    }
  }
}

@mixin btn-gradient($color, $color1,$bradius:2px) {
//  @extend .btn;
  @include filter-gradient($color,$color1); // IE6-8
  @include background-image(linear-gradient($color,$color1));
  @include box-shadow(inset 0 0px 2px 1px rgba(#fff, .75));
  @include border-radius($bradius);
  @include inline-block();
  color: #fff;
  border: 1px solid darken($color, 10%);
  &:hover {
    @include opacity(.9);
    color: #fff;
  }
  &:active {
    box-shadow: inset 0 1px 2px rgba(#000, .2);
  }
}
@mixin b-box{
  padding: 5px 3px 5px 5px;
  @include border-radius(10px);
  border: 1px solid #cce5f3;
}


@mixin childs(){
  &>*+*{
    @content;
  }
}